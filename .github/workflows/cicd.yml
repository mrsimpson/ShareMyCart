name: CI/CD

on:
  push:
    branches:
      - master
      - cicd
      - router-gh-pages
  pull_request:
env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
            SUBDOMAIN="staging"
            if [ "$BRANCH" == "master" ]; then 
            SUBDOMAIN="app"; 
            fi;
            echo ::set-output name=SUBDOMAIN::${SUBDOMAIN}
            echo ::set-output name=DOMAIN::${SUBDOMAIN}.sharemycart.com
            echo ::set-output name=PUBLIC_URL::https://${SUBDOMAIN}.sharemycart.com
      - uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - run: |
          npm i
      # - run: |
      #     npm run test
      ### setup env-file from secrets
      - name: Setup env
        uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BASENAME"
          value: ${{ steps.vars.outputs.PUBLIC_URL }}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_API_KEY"
          value: ${{secrets.STAGING_BACKEND_API_KEY}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_AUTH_DOMAIN"
          value: ${{secrets.STAGING_BACKEND_PROJECT_ID}}${{'.firebaseapp.com'}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_DATABASE_URL"
          value: ${{'https://'}}${{secrets.STAGING_BACKEND_PROJECT_ID}}${{'.firebaseio.com'}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_PROJECT_ID"
          value: ${{secrets.STAGING_BACKEND_PROJECT_ID}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_STORAGE_BUCKET"
          value: ${{secrets.STAGING_BACKEND_PROJECT_ID}}${{'.appspot.com'}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_MESSAGE_SENDER_ID"
          value: ${{secrets.STAGING_BACKEND_MESSAGE_SENDER_ID}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_SENDER_APP_ID"
          value: ${{secrets.STAGING_BACKEND_SENDER_APP_ID}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_BACKEND_MEASUREMENT_ID"
          value: ${{secrets.STAGING_BACKEND_MEASUREMENT_ID}}
          envPath: '.env.staging'
      - uses: TickX/var-to-dotenv@v1.1.1
        with:
          key: "REACT_APP_CONFIRMATION_EMAIL_REDIRECT"
          value: ${{secrets.STAGING_CONFIRMATION_EMAIL_REDIRECT}}
          envPath: '.env.staging'
      - run: |
          npm run build:staging
      - name: Upload build
        uses: actions/upload-artifact@v1.0.0
        with:
          # Artifact name
          name: Build
          # Directory containing files to upload
          path: build

  deploy:
    needs: [build]
    # if: github.ref == 'master' #TODO: Switch to real staging once we're out of Beta
    env:
      GITHUB_PAT: ${{ secrets.DEPLOYMENT_PAT }}
    runs-on: ubuntu-latest
    steps:
      - name: Download build
        uses: actions/download-artifact@v1.0.0
        with:
          # Artifact name
          name: Build
          # Destination path
          path: build
      - name: Initialize workflow variables
        id: vars
        shell: bash
        run: |
            SUBDOMAIN="staging"
            REPO="sharemycart/app-staging"
            if [ "$BRANCH" == "master" ]; then 
            SUBDOMAIN="app"; 
            REPO="sharemycart/sharemycart"; 
            fi;
            echo ::set-output name=SUBDOMAIN::${SUBDOMAIN}
            echo ::set-output name=DOMAIN::${SUBDOMAIN}.sharemycart.com
            echo ::set-output name=REPO::${REPO}
        env:
          BRANCH: "${{ github.ref }}"
      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v1.3.0
        with:
          repo: ${{ steps.vars.outputs.REPO }}
          target_branch: gh-pages
          build_dir: build
          fqdn: ${{ steps.vars.outputs.DOMAIN }}
